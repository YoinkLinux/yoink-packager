#!/bin/bash

progs_to_install=()
progs_shortname=()
progs_list=()
packages=()
package_names=()
progs_to_install_names=()
source /etc/yoink/mirror
INSTALL=false

[[ $(id -u) -ne 0 ]] && echo "User must be root!" && exit 1

function create_package_list(){
	for prog in $(cat /etc/yoink/yoink.db | cut -d ',' -f 2); do
		packages+=("$prog")
	done
	for prog in $(cat /etc/yoink/yoink.db | cut -d ',' -f 1); do
		package_names+=("$prog");
	done
}

function find_packages() {
	for request in ${progs_list}; do
		for program in ${!package_names[@]}; do
			if [[ "$request" == "${package_names[$program]}" ]]; then
				progs_to_install+=("${packages[$program]}");
				progs_to_install_names+=("${package_names[$program]}")
			fi
		done
	done
	echo Packages to install: ${progs_to_install[@]}
	echo Package names: ${progs_to_install_names[@]}
}

# Downloads the program.

function download_packages() {
	echo "Yoink mirror: $YOINK_MIRROR"
	echo ""
	for i in "${!progs_to_install[@]}"; do
		echo "Downloading ${progs_to_install_names[$i]} (${progs_to_install[i]})";
		program=${progs_to_install[i]};
		$(wget -q -O "/var/cache/yoink/$program" "$YOINK_MIRROR/yoinklinux/$program") 2>&1 >/dev/null
		echo Done.
	done
}

# Installs the program.

function install_packages(){
	for i in "${!progs_to_install[@]}"; do 
		tarball=${progs_to_install[i]};
		/etc/yoink/yoink-pkgr install /var/cache/yoink/$tarball ;
	done
}

function yoink_update(){
	echo "Updating yoink database..."
	$(wget -q -O /etc/yoink/yoink.db "$YOINK_MIRROR/yoinklinux/yoink.db") 2>&1 > /dev/null
	echo "Done."
}

export -f create_package_list
export -f find_packages
export -f download_packages
export -f install_packages
export -f yoink_update

while [[ $# -gt 0 ]] ; do
	opt="$1"
	shift;
	case "$opt" in
		"update")
			yoink_update
			exit 0
		;;
		"install")
			progs_list=$@
			INSTALL=true
			break
		;;
		*)
			echo "Invalid option."
			exit 1
	esac
done

if [[ $INSTALL -eq true ]]; then
	create_package_list
	find_packages
	download_packages
	install_packages
fi
