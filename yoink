#!/bin/bash

progs_to_install=()
progs_shortname=()
progs_list=()
source /etc/yoink/mirror
INSTALL=false

function find_packages() {
	for prog in ${progs_list}; do
		package_line=`cat /usr/lib/yoink/yoink.db | grep $prog`;
		if [[ $? -eq 0 ]]; then
			new_package=`echo $package_line | cut -d ',' -f 2 | tr -d '\r'`;
			progs_to_install+=("$new_package");
			progs_shortname+=("$prog");
		fi
	done
}

# Downloads the program.

function download_packages() {
	for i in "${!progs_to_install[@]}"; do
		echo Downloading ${progs_shortname[$i]} - ${progs_to_install[i]} from $YOINK_MIRROR;
		program=${progs_to_install[i]};
		$(wget -q -P /var/cache/yoink "$YOINK_MIRROR/yoinklinux/$program") 2>&1 >/dev/null
		echo Done.
	done
}

# Installs the program.

function install_packages(){
	for i in "${!progs_to_install[@]}"; do 
		tarball=${progs_to_install[i]};
		/etc/yoink/yoink-pkgr -a /var/cache/yoink/$tarball;
	done
}

function yoink_update(){
	echo "Updating yoink database..."
	$(wget -q -P /etc/yoink/ "$YOINK_MIRROR/yoinklinux/yoink.db") 2>&1 > /dev/null
	echo "Done."
}
export -f find_packages
export -f download_packages
export -f install_packages
export -f yoink_update

while [[ $# -gt 0 ]] ; do
	opt="$1"
	shift;
	case "$opt" in
		"update")
			yoink_update
			exit 0
		;;
		"install")
			progs_list=$@
			echo "New progs_list: $progs_list"
			INSTALL=true
		;;
		*)
			echo "Invalid option."
			exit 1
	esac
	if [[ $INSTALL ]]; then
		find_packages
		download_packages
		install_packages
	fi
done
